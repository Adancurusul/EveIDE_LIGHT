// File: lsu.v
// Generated by MyHDL 0.11
// Date: Tue Jun  9 20:16:53 2020


`timescale 1ns/10ps

module lsu (
    r6_r7_data,
    ds1_data,
    mem_read,
    mem_write,
    mem_ok,
    lsu_out,
    addr,
    wdata,
    rdata,
    write,
    read,
    rdy
);
// :param r6_r7_data: 16 in
// :param ds1_data:  16 in
// :param mem_read: 1 in
// :param mem_write: 1 in
// :param mem_ok: 1 out
// :param lsu_out: 8 out
// :param addr: 16 out
// :param wdata:  8 in
// :param rdata: 1 out
// :param write: 1 out
// :param read: 1 out
// :param rdy: 1 in
// :return:

input [15:0] r6_r7_data;
input [15:0] ds1_data;
input mem_read;
input mem_write;
output mem_ok;
wire mem_ok;
output [7:0] lsu_out;
wire [7:0] lsu_out;
output [15:0] addr;
reg [15:0] addr;
output [7:0] wdata;
reg [7:0] wdata;
input rdata;
output write;
wire write;
output read;
wire read;
input rdy;





assign write = mem_write;
assign read = mem_read;
assign mem_ok = rdy;
assign lsu_out = rdata;


always @(mem_write, mem_read, ds1_data, r6_r7_data) begin: LSU_LOGIC_2
    if ((mem_read | mem_write)) begin
        addr = r6_r7_data;
        wdata = ds1_data;
    end
    else begin
        addr = 0;
        wdata = 0;
    end
end

endmodule
