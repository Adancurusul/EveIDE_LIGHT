// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "05/01/2021 14:20:10"
                                                                                
// Verilog Test Bench template for design : LPCE_PHY
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ns/ 1 ps
module LPCE_PHY_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg LPCE_CLKi;
reg LPCE_DATi;
reg READ_CLK;
reg READ_EN;
reg READ_RSTn;
reg Tx_CLKi;
reg WR_CLK;
reg [127:0] WR_DATA;
reg WR_EN;
reg WR_RSTn;
// wires                                               
wire LPCE_CLKo;
wire LPCE_DATo;
wire [127:0]  READ_DATA;
wire READ_EMPT;
wire SYNC;
wire WR_FULL;

// assign statements (if any)                          
LPCE_PHY i1 (
// port map - connection between master ports and signals/registers   
	.LPCE_CLKi(LPCE_CLKi),
	.LPCE_CLKo(LPCE_CLKo),
	.LPCE_DATi(LPCE_DATi),
	.LPCE_DATo(LPCE_DATo),
	.READ_CLK(READ_CLK),
	.READ_DATA(READ_DATA),
	.READ_EMPT(READ_EMPT),
	.READ_EN(READ_EN),
	.READ_RSTn(READ_RSTn),
	.SYNC(SYNC),
	.Tx_CLKi(Tx_CLKi),
	.WR_CLK(WR_CLK),
	.WR_DATA(WR_DATA),
	.WR_EN(WR_EN),
	.WR_FULL(WR_FULL),
	.WR_RSTn(WR_RSTn)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
                                                       
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

